diff --git a/node_modules/@parcel/transformer-js/lib/JSTransformer.js b/node_modules/@parcel/transformer-js/lib/JSTransformer.js
index a0e99ad..1d4b2ed 100644
--- a/node_modules/@parcel/transformer-js/lib/JSTransformer.js
+++ b/node_modules/@parcel/transformer-js/lib/JSTransformer.js
@@ -193,6 +193,7 @@ var _default = new (_plugin().Transformer)({
     let reactRefresh = config.isSource && options.hmrOptions && config.env.isBrowser() && !config.env.isWorker() && options.mode === 'development' && ((pkg === null || pkg === void 0 ? void 0 : (_pkg$dependencies2 = pkg.dependencies) === null || _pkg$dependencies2 === void 0 ? void 0 : _pkg$dependencies2.react) || (pkg === null || pkg === void 0 ? void 0 : (_pkg$devDependencies2 = pkg.devDependencies) === null || _pkg$devDependencies2 === void 0 ? void 0 : _pkg$devDependencies2.react) || (pkg === null || pkg === void 0 ? void 0 : (_pkg$peerDependencies2 = pkg.peerDependencies) === null || _pkg$peerDependencies2 === void 0 ? void 0 : _pkg$peerDependencies2.react)); // Check if we should ignore fs calls
     // See https://github.com/defunctzombie/node-browser-resolve#skip
 
+
     let ignoreFS = pkg && pkg.browser && typeof pkg.browser === 'object' && pkg.browser.fs === false;
     let result = await config.getConfigFrom(_path().default.join(options.projectRoot, 'index'), ['package.json']);
     let rootPkg = result === null || result === void 0 ? void 0 : result.contents;
@@ -329,7 +330,7 @@ var _default = new (_plugin().Transformer)({
       jsx_pragma: config === null || config === void 0 ? void 0 : config.pragma,
       jsx_pragma_frag: config === null || config === void 0 ? void 0 : config.pragmaFrag,
       is_development: options.mode === 'development',
-      react_refresh: Boolean(config === null || config === void 0 ? void 0 : config.reactRefresh),
+      react_refresh: asset.env.isBrowser() && !asset.env.isWorker() && Boolean(config === null || config === void 0 ? void 0 : config.reactRefresh),
       targets,
       source_maps: !!asset.env.sourceMap,
       scope_hoist: asset.env.shouldScopeHoist
