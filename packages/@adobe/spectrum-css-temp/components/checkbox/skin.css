/*
Copyright 2019 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

:root {
  /* todo: fix in DNA, these lines are still in spectrum-css */
  --spectrum-checkbox-m-emphasized-text-color-key-focus: var(--spectrum-checkbox-m-emphasized-text-color-hover);
  --spectrum-checkbox-m-emphasized-box-border-color-selected-key-focus: var(--spectrum-checkbox-m-emphasized-box-border-color-selected-hover);
}

.spectrum-Checkbox {
  /* color is maybe too light, check with spectrum / DNA */
  color: var(--spectrum-checkbox-m-text-color);
}
.spectrum-Checkbox .spectrum-Checkbox-checkmark,
.spectrum-Checkbox .spectrum-Checkbox-partialCheckmark {
  color: var(--spectrum-checkbox-m-checkmark-color);
}

.spectrum-Checkbox-box {
  &:before {
    border-color: var(--spectrum-checkbox-m-emphasized-box-border-color);
    background-color: var(--spectrum-checkbox-m-emphasized-box-background-color);
  }
}

.spectrum-Checkbox-label {
  color: var(--spectrum-checkbox-m-emphasized-text-color);
}

/* Indeterminate is basically a checked state, so handle colors for checked state here */
.spectrum-Checkbox.is-indeterminate .spectrum-Checkbox-box,
.spectrum-Checkbox-input:checked + .spectrum-Checkbox-box {
  &:before {
    /* this color looks to be too dark, check with spectrum / DNA see https://github.com/adobe/spectrum-css/pull/1138#issuecomment-868830064 */
    border-color: var(--spectrum-checkbox-m-emphasized-box-border-color-selected);
  }
}

.spectrum-Checkbox:hover {
  &.is-indeterminate .spectrum-Checkbox-box,
  .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box {
    &:before {
      /* this color gets darker instead of lighter like it used to */
      border-color: var(--spectrum-checkbox-m-emphasized-box-border-color-selected-hover);
    }
  }
}

.spectrum-Checkbox:active {
  &.is-indeterminate .spectrum-Checkbox-box,
  .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box {
    &:before {
      /* this color gets darker instead of lighter like it used to */
      border-color: var(--spectrum-checkbox-m-emphasized-box-border-color-selected-down);
    }
  }
}

.spectrum-Checkbox {
  border-color: var(--spectrum-checkbox-m-emphasized-box-border-color);

  &:hover {
    .spectrum-Checkbox-box {
      &:before {
        border-color: var(--spectrum-checkbox-m-emphasized-box-border-color-hover);
      }
    }
    .spectrum-Checkbox-label {
      color: var(--spectrum-checkbox-m-emphasized-text-color-hover);
    }
  }

  &:active {
    .spectrum-Checkbox-box {
      &:before {
        border-color: var(--spectrum-checkbox-m-emphasized-box-border-color-down);
      }
    }
    .spectrum-Checkbox-label {
      color: var(--spectrum-checkbox-m-emphasized-text-color-down);
    }
  }
}

.spectrum-Checkbox .spectrum-Checkbox-input,
.spectrum-Checkbox .spectrum-Checkbox-input:checked {
  &:disabled + .spectrum-Checkbox-box {
    &:before {
      border-color: var(--spectrum-checkbox-m-emphasized-box-border-color-disabled);
      background-color: var(--spectrum-checkbox-m-emphasized-box-background-color-disabled);
    }
  }

  &:disabled ~ .spectrum-Checkbox-label {
    color: var(--spectrum-checkbox-m-text-color-disabled);
  }
}

/* Focus */
.spectrum-Checkbox-input {
  & + .spectrum-Checkbox-box {
    &:after {
      box-shadow: 0 0 0 var(--spectrum-checkbox-m-focus-ring-size) var(--spectrum-checkbox-m-focus-ring-color-key-focus);
      opacity: 0;
    }
  }
  &:focus-ring + .spectrum-Checkbox-box {
    &:before {
      border-color: var(--spectrum-checkbox-m-box-border-color-key-focus);
    }
    &:after {
      opacity: 1;
    }
  }
  .spectrum-Checkbox.is-indeterminate &,
  &:checked {
    &:focus-ring + .spectrum-Checkbox-box {
      &:before {
        border-color: var(--spectrum-checkbox-m-emphasized-box-border-color-selected-key-focus);
      }
    }
  }
  &:focus-ring ~ .spectrum-Checkbox-label {
    color: var(--spectrum-checkbox-m-emphasized-text-color-key-focus);
  }
}

.spectrum-Checkbox--quiet .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box,
.spectrum-Checkbox--quiet.is-indeterminate .spectrum-Checkbox-box,
.spectrum-Checkbox--quiet.is-indeterminate .spectrum-Checkbox-input:focus-ring + .spectrum-Checkbox-box {
  &:before {
    border-color: var(--spectrum-checkbox-m-box-border-color-selected);
  }
}
.spectrum-Checkbox--quiet:hover {
  &.is-indeterminate .spectrum-Checkbox-box,
  .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box {
    &:before {
      border-color: var(--spectrum-checkbox-m-box-border-color-selected-hover);
    }
  }
}
.spectrum-Checkbox--quiet:active {
  &.is-indeterminate .spectrum-Checkbox-box,
  .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box {
    &:before {
      border-color: var(--spectrum-checkbox-m-box-border-color-selected-down);
    }
  }
}

.spectrum-Checkbox.is-invalid {
  /* Extra-specific selectors added here to handle checked state */
  .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box,
  .spectrum-Checkbox-box {
    &:before {
      border-color: var(--spectrum-checkbox-m-box-border-color-error);
    }
  }

  .spectrum-Checkbox-label {
    color: var(--spectrum-checkbox-m-text-color-error);
  }

  &.is-indeterminate .spectrum-Checkbox-input:focus-ring,
  .spectrum-Checkbox-input:focus-ring {
    & + .spectrum-Checkbox-box {
      &:before {
        border-color: var(--spectrum-checkbox-m-box-border-color-error-hover);
      }
    }

    & ~ .spectrum-Checkbox-label {
      color: var(--spectrum-checkbox-m-text-color-error-hover);
    }
  }

  &:hover {
    .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box,
    .spectrum-Checkbox-box {
      &:before {
        border-color: var(--spectrum-checkbox-m-box-border-color-error-hover);
      }
    }

    .spectrum-Checkbox-label {
      color: var(--spectrum-checkbox-m-text-color-error-hover);
    }
  }

  &:active {
    .spectrum-Checkbox-input:checked + .spectrum-Checkbox-box,
    .spectrum-Checkbox-box {
      &:before {
        border-color: var(--spectrum-checkbox-m-box-border-color-error-down);
      }
    }

    .spectrum-Checkbox-label {
      color: var(--spectrum-checkbox-m-text-color-error-down);
    }
  }
}
