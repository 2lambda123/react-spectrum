/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

@import "../../../@adobe/spectrum-css-temp/components/commons/focus-ring.css";

.react-spectrum-ToastContainer {
  position: fixed;
  inset-inline-start: 0;
  inset-inline-end: 0;
  z-index: 100050; /* above modals */
  display: flex;
  pointer-events: none;
  outline: none;

  .spectrum-Toast {
    position: absolute;
    margin: 16px;
    pointer-events: all;
  }

  &[data-position=top] {
    top: 0;
    flex-direction: column;
    --slide-from: translateY(-100%);
    --slide-to: translateY(0);
  }

  &[data-position=bottom] {
    bottom: 0;
    flex-direction: column-reverse;
    --slide-from: translateY(100%);
    --slide-to: translateY(0);
  }

  &[data-placement=left] {
    align-items: flex-start;
    --slide-from: translateX(-100%);
    --slide-to: translateX(0);

    &:dir(rtl) {
      --slide-from: translateX(100%);
    }
  }

  &[data-placement=center] {
    align-items: center;
  }

  &[data-placement=right] {
    align-items: flex-end;
    --slide-from: translateX(100%);
    --slide-to: translateX(0);

    &:dir(rtl) {
      --slide-from: translateX(-100%);
    }
  }
}

.spectrum-Toast {
  composes: spectrum-FocusRing;
  --spectrum-focus-ring-border-radius: var(--spectrum-toast-border-radius);
  --spectrum-focus-ring-gap: var(--spectrum-alias-focus-ring-gap);
  --spectrum-focus-ring-size: var(--spectrum-alias-focus-ring-size);
  --scale: scale(1);
  --scale-from: var(--scale);
  --opacity-from: 1;
  --opacity-to: 1;
  transform: var(--slide-to) var(--scale);
  transition: transform 300ms;
  /* key line so you can distinguish toasts in a stack */
  box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.2);

  &[data-animation=entering] {
    animation: slide-in 300ms;
  }

  &[data-animation=exiting] {
    /* Temporarily set to animation time to 0ms to avoid problems calculating size of background toasts while animating foreground */
    animation: fade-out 0ms forwards;
  }

  /* scale each successive toast backward so it looks like a stack */
  &[data-index="1"] {
    --scale: scale(0.9);
    --slide-from: translateY(0);
    --slide-to: translateY(-12px);
  }

  &[data-index="2"] {
    --scale: scale(0.8);
    --slide-from: translateY(0);
    --slide-to: translateY(-24px);
    --opacity-to: .35; /* fade out last to show there could be more behind */
    opacity: var(--opacity-to);
  }

  /* extra 4th toast will scale back while fading out */
  &[data-index="3"] {
    --scale: scale(0.7);
    --slide-from: translateY(0);
    --slide-to: translateY(-32px);
  }

  /* toasts will have queued animation when entering from queue. they will fade and scale in from the back. */
  &[data-animation=queued] {
    --scale-from: scale(0.7);
    --slide-from: translateY(-32px);
    --opacity-from: 0;
    /* --opacity-to: 1; */
    animation: slide-in 300ms;
  }
}

@keyframes slide-in {
  from {
    transform: var(--slide-from) var(--scale-from);
    opacity: var(--opacity-from);
  }

  to {
    transform: var(--slide-to) var(--scale);
    opacity: var(--opacity-to);
  }
}

@keyframes fade-out {
  from {
    opacity: 1;
  }

  to {
    opacity: 0.1;
  }
}
